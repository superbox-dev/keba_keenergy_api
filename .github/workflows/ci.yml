name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  configure:
    name: Configure
    uses: ./.github/workflows/configure.yml

  code-analysis:
    name: Code analysis using Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: configure

    strategy:
      fail-fast: False
      matrix:
        python-version: ${{ fromJson(needs.configure.outputs.environments).python-version }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up project
        uses: ./.github/actions/setup-project
        with:
          python-version: ${{ matrix.python-version }}

      - name: Lint python files with black
        run: uv run black --diff --check $(git ls-files '*.py')

      - name: Lint python files with mypy
        run: uv run mypy $(git ls-files '*.py')

      - name: Lint python files with ruff
        run: uv run ruff check $(git ls-files '*.py')

      - name: Lint YAML files with yamllint
        run: uv run yamllint $(git ls-files '*.yml' '*.yaml')

  security:
    name: Security
    uses: ./.github/workflows/security.yml
    needs: configure
    with:
      environments: ${{ needs.configure.outputs.environments }}

  tests:
    name: Tests using Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    needs: configure

    strategy:
      fail-fast: False
      matrix:
        python-version: ${{ fromJson(needs.configure.outputs.environments).python-version }}

    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up project
        uses: ./.github/actions/setup-project
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run tests
        run: uv run pytest -n auto

  coverage:
    name: Generate coverage badge
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Set up project
        uses: ./.github/actions/setup-project
        with:
          python-version-file: pyproject.toml
